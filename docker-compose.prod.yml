# ==================================================
# ScriptParser 生产环境 Docker Compose 配置
# ==================================================

services:
  # Nginx 反向代理
  nginx:
    image: nginx:1.27-alpine
    container_name: ${PROJECT_PREFIX}_nginx
    restart: always
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
      - coprocessor
    networks:
      - sp_default
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Web应用 - 本地构建模式
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    image: ccr.ccs.tencentyun.com/baokuan-jieqouqi/scriptparser-web:latest
    container_name: ${PROJECT_PREFIX}_frontend
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    expose:
      - "3000"
    networks:
      - sp_default
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FastAPI AI协处理器 - 使用TCR镜像  
  coprocessor:
    image: ccr.ccs.tencentyun.com/baokuan-jieqouqi/scriptparser-coprocessor:latest
    container_name: ${PROJECT_PREFIX}_backend
    restart: always
    volumes:
      - ./apps/coprocessor/app:/app/app:ro
    environment:
      - HOST=${HOST}
      - PORT=${PORT}
      - DEBUG=${DEBUG}
      - NODE_ENV=${NODE_ENV}
      - ALIYUN_ASR_API_KEY=${ALIYUN_ASR_API_KEY}
      - ALIYUN_ASR_API_SECRET=${ALIYUN_ASR_API_SECRET}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - ALIBABA_CLOUD_ACCESS_KEY_ID=${ALIBABA_CLOUD_ACCESS_KEY_ID}
      - ALIBABA_CLOUD_ACCESS_KEY_SECRET=${ALIBABA_CLOUD_ACCESS_KEY_SECRET}
      - ALIBABA_TINWU_APPKEY=${ALIBABA_TINWU_APPKEY}
      - TINGWU_ENDPOINT=${TINGWU_ENDPOINT}
      - TINGWU_REGION=${TINGWU_REGION}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_BASE_URL=${DEEPSEEK_BASE_URL}
      - KIMI_API_KEY=${KIMI_API_KEY}
      - KIMI_BASE_URL=${KIMI_BASE_URL}
      - MAX_TOKENS=${MAX_TOKENS}
      - TEMPERATURE=${TEMPERATURE}
      - TIMEOUT=${TIMEOUT}
    expose:
      - "8000"
    networks:
      - sp_default
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  sp_default:
    driver: bridge
    name: ${PROJECT_PREFIX}_default

volumes:
  sp_nginx_data:
    name: ${PROJECT_PREFIX}_nginx_data
